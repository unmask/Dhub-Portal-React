{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/TagsPage/TagsPage.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTags } from '../../redux/tags/tags.actions';\nimport './TagsPage.styles.scss';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport TagPanel from '../../components/TagPanel/TagPanel.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst TagsPage = ({\n  getTags,\n  tag: {\n    tags,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTags();\n  }, [getTags]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"A tag is a keyword or label that categorizes your question with other, similar questions. Using the right tags makes it easier for others to find and answer your question.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headline-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, tags.length, \" tags\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-browser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, tags.map(tag => /*#__PURE__*/React.createElement(TagPanel, {\n    key: tag.tagname,\n    tag: tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};\n\nTagsPage.propTypes = {\n  getTags: PropTypes.func.isRequired,\n  tag: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tag: state.tag\n});\n\nexport default connect(mapStateToProps, {\n  getTags\n})(TagsPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/TagsPage/TagsPage.component.jsx"],"names":["React","useEffect","connect","PropTypes","getTags","SideBar","TagPanel","RightSideBar","TagsPage","tag","tags","loading","length","map","tagname","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,OAAO,wBAAP;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAYK,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAjB,CAAD,KAAyC;AACtDV,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mLAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,IAAI,CAACE,MAAZ,UADJ,CALJ,eAQI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACK,OAAnB;AAA4B,IAAA,GAAG,EAAIL,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CARJ,CADJ,CAFJ,eAmBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AAuBH,CA5BD;;AA8BAD,QAAQ,CAACO,SAAT,GAAqB;AACjBX,EAAAA,OAAO,EAAED,SAAS,CAACa,IAAV,CAAeC,UADP;AAEjBR,EAAAA,GAAG,EAAEN,SAAS,CAACe,MAAV,CAAiBD;AAFL,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,GAAG,EAAEW,KAAK,CAACX;AADmB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACiB,eAAD,EAAiB;AAAEf,EAAAA;AAAF,CAAjB,CAAP,CAAqCI,QAArC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTags } from '../../redux/tags/tags.actions';\n\nimport './TagsPage.styles.scss'\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport TagPanel from '../../components/TagPanel/TagPanel.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst TagsPage = ({ getTags , tag: { tags, loading }}) => {\n    useEffect(() => {\n        getTags();\n    }, [getTags]);\n\n    return (\n        <div className='page'>\n            <SideBar/>\n            <div className='tags-page'>\n                <div className='main-bar'>\n                    <h1 className='headline'>Tags</h1>\n                    <p className='fs-body'>\n                        A tag is a keyword or label that categorizes your question with other, similar questions. Using the right tags makes it easier for others to find and answer your question.\n                    </p>\n                    <div className='headline-count'>\n                        <span>{tags.length} tags</span>\n                    </div>\n                    <div className='user-browser'>\n                        <div className='grid-layout'>\n                            {tags.map(tag => (\n                                <TagPanel key={tag.tagname} tag = {tag}/>))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    )\n};\n\nTagsPage.propTypes = {\n    getTags: PropTypes.func.isRequired,\n    tag: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    tag: state.tag\n});\n\nexport default connect(mapStateToProps,{ getTags })(TagsPage);"]},"metadata":{},"sourceType":"module"}