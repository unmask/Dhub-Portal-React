{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/components/PostItem/PostItem.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\nimport userIcon from '../../assets/user.png';\nimport './PostItem.styles.scss';\n\nconst PostItem = ({\n  post: {\n    id,\n    title,\n    body,\n    tagname,\n    username,\n    user_id,\n    answer_count,\n    comment_count,\n    created_at\n  }\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vote-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, answer_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, \"answers\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vote-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, comment_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"comments\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `/questions/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brief\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, body.substring(0, 200), \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/tags/${tagname}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, tagname)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-action-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"asked \", timeAgo(created_at)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-gravatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${user_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"userlogo\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${user_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, username))))));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default connect(null)(PostItem);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/components/PostItem/PostItem.component.jsx"],"names":["React","connect","PropTypes","Link","timeAgo","userIcon","PostItem","post","id","title","body","tagname","username","user_id","answer_count","comment_count","created_at","substring","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\nimport userIcon from '../../assets/user.png';\n\nimport './PostItem.styles.scss';\n\nconst PostItem = ({ post: { id, title, body, tagname, username, user_id, answer_count, comment_count, created_at } }) => {\n    return (\n        <div className='posts'>\n            <div className='stats-container'>\n                <div className='stats'>\n                    <div className='vote'>\n                        <span className='vote-count'>{answer_count}</span>\n                        <div className='count-text'>answers</div>\n                    </div>\n                    <div className='vote'>\n                        <span className='vote-count'>{comment_count}</span>\n                        <div className='count-text'>comments</div>\n                    </div>\n                </div>\n            </div>\n            <div className='summary'>\n                <h3><a href={`/questions/${id}`}>\n                    {title}\n                </a></h3>\n                <div className='brief'>\n                    {body.substring(0, 200)}...\n                </div>\n                <div className='question-tags'>\n                    <Link to={`/tags/${tagname}`}>\n                        {tagname}\n                    </Link>\n                </div>\n                <div className='question-user'>\n                    <div className='user-info'>\n                        <div className='user-action-time'>asked {timeAgo(created_at)}</div>\n                        <div className='user-gravatar'>\n                            <Link to={`/users/${user_id}`}>\n                                <div className='logo-wrapper'>\n                                    <img alt='userlogo'\n                                         src={userIcon}/>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className='user-details'>\n                            <Link to={`/users/${user_id}`}>\n                                {username}\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired\n};\n\n\nexport default connect(null)(PostItem);"]},"metadata":{},"sourceType":"module"}