{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/UserPage/UserPage.component.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../redux/users/users.actions';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\nimport userLogo from '../../assets/user.png';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\nimport './UserPage.styles.scss';\n\nconst UserPage = ({\n  getUser,\n  user: {\n    user,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getUser(match.params.id); // eslint-disable-next-line\n  }, [getUser]);\n  return loading || user === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"avatar-link\",\n    to: `/users/${user.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userLogo,\n    alt: \"user-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }\n  }, user.answer_count * 10 + user.post_count * 5, \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  }, \"POINTS\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 49\n    }\n  }, user.username)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 49\n    }\n  }, \"user created on\\xA0-\\xA0\", timeAgo(user.created_at))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 57\n    }\n  }, user.answer_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 57\n    }\n  }, \"answers\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 57\n    }\n  }, user.post_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 57\n    }\n  }, \"questions\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 57\n    }\n  }, user.comment_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 57\n    }\n  }, \"comments\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 57\n    }\n  }, user.tag_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 57\n    }\n  }, \"tags\")))))))))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })));\n};\n\nUserPage.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getUser\n})(UserPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/UserPage/UserPage.component.jsx"],"names":["React","useEffect","Fragment","connect","PropTypes","getUser","Link","timeAgo","userLogo","SideBar","RightSideBar","UserPage","user","loading","match","params","id","answer_count","post_count","username","created_at","comment_count","tag_count","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect,Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../redux/users/users.actions';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\n\nimport userLogo from '../../assets/user.png';\n\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nimport './UserPage.styles.scss'\n\n\nconst UserPage = ({ getUser, user: { user, loading }, match  }) => {\n    useEffect(() => {\n        getUser(match.params.id);\n        // eslint-disable-next-line\n    }, [getUser]);\n\n    return loading || user === null ? <Fragment>Loading...</Fragment> : <Fragment>\n        <div className='page'>\n            <SideBar/>\n            <div className='user-page'>\n                <div className='user-main-bar'>\n                    <div className='user-card'>\n                        <div className='grid'>\n                            <div className='img-card'>\n                                <div className='avatar-card'>\n                                    <div className='avatar'>\n                                        <Link className='avatar-link' to={`/users/${user.id}`}>\n                                            <div className='logo-wrapper'>\n                                                <img src={userLogo} alt='user-logo'/>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                    <div className='title'>\n                                        <div className='grid'>\n                                            {(user.answer_count * 10) + (user.post_count * 5)}\n                                            &nbsp;\n                                            <span>\n                                                POINTS\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='content-card'>\n                                <div className='content-grid'>\n                                    <div className='info-cell'>\n                                        <div className='info'>\n                                            <div className='details'>\n                                                <h2>{user.username}</h2>\n                                            </div>\n                                            <div className='date'>\n                                                <p>\n                                                    user created on&nbsp;-&nbsp;{timeAgo(user.created_at)}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='stats-cell'>\n                                        <div className='count-sec'>\n                                            <div className='counts'>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.answer_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            answers\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.post_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            questions\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.comment_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            comments\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.tag_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            tags\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className='row-grid'>\n                        <div className='grid-cell1'>\n                            <div className='cell-layout'>\n                                <div className='community'>\n                                    <h3>\n                                        <span className='icon'>\n                                            <svg aria-hidden='true' className='svg-icon native icon-logo-sex' width='18' height='18' viewBox='0 0 18 18'>\n                                                <path d='M3 4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2H3z' fill='#8FD8F7'/>\n                                                <path d='M15 11H3c0 1.1.9 2 2 2h5v3l3-3a2 2 0 0 0 2-2z' fill='#155397'/>\n                                                <path fill='#46A2D9' d='M3 5h12v2H3z'/><path fill='#2D6DB5' d='M3 8h12v2H3z'/>\n                                            </svg>\n                                        </span>\n                                        <span className='text'>Communities</span>\n                                    </h3>\n                                    <ul>\n                                        <li className='item'><a href='/'>\n                                            <span><Logo className='logo'/></span>\n                                            <span>StackOverflow</span>\n                                        </a></li>\n                                    </ul>\n                                </div>\n                                <div className='user-posts'>\n                                    <h3>\n                                        Top network posts\n                                    </h3>\n                                    <p>\n                                        We respect a laser-like focus on one topic.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='grid-cell2'>\n                            <div className='top-tags'>\n                                <h3>\n                                    Top Tags\n                                </h3>\n                                <div className='top-tags-sec'>\n                                    <div className='top-tags-cells'>\n                                        <div className='top-cell'>\n                                            <div className='tag-cell'>\n                                                <a href='/tags/java'>\n                                                    java\n                                                </a>\n                                                <div className='score'>\n                                                    <div className='score-txt'>\n                                                        <div className='score-tab'>\n                                                            <span className='txt'>Posts</span>\n                                                            <span className='number'>2</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='top-tags-cells'>\n                                        <div className='top-cell'>\n                                            <div className='tag-cell'>\n                                                <a href='/tags/node.js'>\n                                                    node.js\n                                                </a>\n                                                <div className='score'>\n                                                    <div className='score-txt'>\n                                                        <div className='score-tab'>\n                                                            <span className='txt'>Posts</span>\n                                                            <span className='number'>1</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='top-tags-cells'>\n                                        <div className='top-cell'>\n                                            <div className='tag-cell'>\n                                                <a href='/tags/react'>\n                                                    react\n                                                </a>\n                                                <div className='score'>\n                                                    <div className='score-txt'>\n                                                        <div className='score-tab'>\n                                                            <span className='txt'>Posts</span>\n                                                            <span className='number'>0</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    </Fragment>\n\n\n};\n\nUserPage.propTypes = {\n    getUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { getUser })(UserPage);"]},"metadata":{},"sourceType":"module"}