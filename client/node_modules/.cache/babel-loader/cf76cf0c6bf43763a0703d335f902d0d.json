{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/components/right-sideBar/right-sideBar.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getTags } from '../../redux/tags/tags.actions';\nimport './right-sideBar.styles.scss';\n\nconst RightSideBar = ({\n  getTags,\n  tag: {\n    tags,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTags();\n  }, [getTags]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-bar-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"tag-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Top Ten Tags\"), tags.slice(0, 10).map(tag => /*#__PURE__*/React.createElement(\"div\", {\n    key: tag.tagname,\n    className: \"tag-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"tag-link\",\n    href: `/tags/${tag.tagname}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, tag.tagname), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-mult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"\\xD7\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, tag.posts_count)))), /*#__PURE__*/React.createElement(Link, {\n    className: \"show-tags\",\n    to: \"/tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"show more tags\")));\n};\n\nRightSideBar.propTypes = {\n  getTags: PropTypes.func.isRequired,\n  tag: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tag: state.tag\n});\n\nexport default connect(mapStateToProps, {\n  getTags\n})(RightSideBar);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/components/right-sideBar/right-sideBar.component.jsx"],"names":["React","useEffect","connect","PropTypes","Link","getTags","RightSideBar","tag","tags","loading","slice","map","tagname","posts_count","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAYE,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAjB,CAAD,KAAyC;AAC1DR,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAyGI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKG,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd,EAAkBC,GAAlB,CAAsBJ,GAAG,iBACtB;AAAK,IAAA,GAAG,EAAEA,GAAG,CAACK,OAAd;AAAuB,IAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAG,SAAQL,GAAG,CAACK,OAAQ,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,GAAG,CAACK,OADT,CADJ,uBAKI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,uBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,GAAG,CAACM,WAAX,CAHJ,CALJ,CADH,CAFL,eAeI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,EAAE,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ,CAzGJ,CADJ;AA6HH,CAlID;;AAoIAP,YAAY,CAACQ,SAAb,GAAyB;AACrBT,EAAAA,OAAO,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADH;AAErBT,EAAAA,GAAG,EAAEJ,SAAS,CAACc,MAAV,CAAiBD;AAFD,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,GAAG,EAAEY,KAAK,CAACZ;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,YAAtC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getTags } from '../../redux/tags/tags.actions';\n\nimport './right-sideBar.styles.scss';\n\nconst RightSideBar = ({ getTags , tag: { tags, loading }}) => {\n    useEffect(() => {\n        getTags();\n    }, [getTags]);\n\n    return (\n        <div className='side-bar'>\n            {/* <div className='side-bar-widget'>\n                <div className='widget-header'>\n                    The Overflow Blog\n                </div>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>A practical guide to writing technical specs</Link>\n                        </div>\n                    </li>\n                </ul>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>Podcast 224: Cryptocurrency-Based Life Forms</Link>\n                        </div>\n                    </li>\n                </ul>\n                <div className='widget-header'>\n                    Featured on Meta\n                </div>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>Community and Moderator guidelines for escalating issues via new response…</Link>\n                        </div>\n                    </li>\n                </ul>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>Triage needs to be fixed urgently, and users need to be notified upon…</Link>\n                        </div>\n                    </li>\n                </ul>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>Technical site integration observational experiment live on Stack Overflow</Link>\n                        </div>\n                    </li>\n                </ul>\n                <ul className='widget-content'>\n                    <li>\n                        <div className='cell'>\n                            <Link to='/'>\n                                <svg aria-hidden='true' className='svg-icon va-text-top' width='14'\n                                     height='14' viewBox='0 0 14 14'>\n                                    <path\n                                        d='M11.1 1.71l1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0zM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88z'/>\n                                </svg>\n                            </Link>\n                        </div>\n                        <div className='cell'>\n                            <Link className='links' to='/'>Dark Mode Beta - help us root out low-contrast and un-converted bits</Link>\n                        </div>\n                    </li>\n                </ul>\n            </div> */}\n            <div className='side-bar-tags'>\n                <h4 className='tag-headline'>Top Ten Tags</h4>\n                {tags.slice(0, 10).map(tag => (\n                    <div key={tag.tagname} className='tag-content'>\n                        <a className='tag-link' href={`/tags/${tag.tagname}`}>\n                            {tag.tagname}\n                        </a>\n                        &nbsp;\n                        <span className='tag-mult'>\n                            <span>&times;</span>\n                            &nbsp;\n                            <span>{tag.posts_count}</span>\n                        </span>\n                    </div>\n                ))}\n                <Link className='show-tags' to='/tags'>show more tags</Link>\n            </div>\n        </div>\n    )\n};\n\nRightSideBar.propTypes = {\n    getTags: PropTypes.func.isRequired,\n    tag: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    tag: state.tag\n});\n\nexport default connect(mapStateToProps, { getTags })(RightSideBar);"]},"metadata":{},"sourceType":"module"}