{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/UserPage/UserPage.component.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../redux/users/users.actions';\nimport { getTopPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\nimport userLogo from '../../assets/user.png';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\nimport './UserPage.styles.scss';\n\nconst UserPage = ({\n  getUser,\n  user: {\n    user,\n    loading\n  },\n  match,\n  getTopPosts,\n  post: {\n    posts,\n    isloading\n  }\n}) => {\n  useEffect(() => {\n    getUser(match.params.id); // eslint-disable-next-line\n  }, [getUser]);\n  useEffect(() => {\n    getTopPosts();\n  }, [getTopPosts]);\n  const userPosts = posts.map(post => {\n    if (post.username === user.username) {\n      return post;\n    }\n  });\n  console.log(userPosts);\n  return loading || user === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 39\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"avatar-link\",\n    to: `/users/${user.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userLogo,\n    alt: \"user-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, user.answer_count * 10 + user.post_count * 5, \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }\n  }, \"POINTS\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 49\n    }\n  }, user.username)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 49\n    }\n  }, \"user created on\\xA0-\\xA0\", timeAgo(user.created_at))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 57\n    }\n  }, user.answer_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 57\n    }\n  }, \"answers\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 57\n    }\n  }, user.post_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 57\n    }\n  }, \"questions\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 57\n    }\n  }, user.comment_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 57\n    }\n  }, \"comments\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 57\n    }\n  }, user.tag_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 57\n    }\n  }, \"tags\")))))))))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Questions asked by \", user.username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, userPosts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: '30px 30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 53\n    }\n  }, \"There are no questions asked by \", user.username) : userPosts.map(userpost => /*#__PURE__*/React.createElement(PostItem, {\n    key: userpost.id,\n    post: userpost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })));\n};\n\nUserPage.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  getTopPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getUser,\n  getTopPosts\n})(UserPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/UserPage/UserPage.component.jsx"],"names":["React","useEffect","Fragment","connect","PropTypes","getUser","getTopPosts","Link","timeAgo","userLogo","SideBar","PostItem","RightSideBar","UserPage","user","loading","match","post","posts","isloading","params","id","userPosts","map","username","console","log","answer_count","post_count","created_at","comment_count","tag_count","length","margin","userpost","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect,Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../redux/users/users.actions';\nimport { getTopPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\nimport timeAgo from '../../services/timeAgo.service';\n\nimport userLogo from '../../assets/user.png';\n\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nimport './UserPage.styles.scss'\n\n\nconst UserPage = ({ getUser, user: { user, loading }, match, getTopPosts, post: { posts, isloading }  }) => {\n    useEffect(() => {\n        getUser(match.params.id);\n        // eslint-disable-next-line\n    }, [getUser]);\n\n    useEffect(() => {\n        getTopPosts();\n    }, [ getTopPosts ]);\n\n    const userPosts = posts.map(post => {\n        if(post.username === user.username) {\n            return post;\n        }\n    });\n\n    console.log(userPosts);\n\n    return loading || user === null ? <Fragment>Loading...</Fragment> : <Fragment>\n        <div className='page'>\n            <SideBar/>\n            <div className='user-page'>\n                <div className='user-main-bar'>\n                    <div className='user-card'>\n                        <div className='grid'>\n                            <div className='img-card'>\n                                <div className='avatar-card'>\n                                    <div className='avatar'>\n                                        <Link className='avatar-link' to={`/users/${user.id}`}>\n                                            <div className='logo-wrapper'>\n                                                <img src={userLogo} alt='user-logo'/>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                    <div className='title'>\n                                        <div className='grid'>\n                                            {(user.answer_count * 10) + (user.post_count * 5)}\n                                            &nbsp;\n                                            <span>\n                                                POINTS\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='content-card'>\n                                <div className='content-grid'>\n                                    <div className='info-cell'>\n                                        <div className='info'>\n                                            <div className='details'>\n                                                <h2>{user.username}</h2>\n                                            </div>\n                                            <div className='date'>\n                                                <p>\n                                                    user created on&nbsp;-&nbsp;{timeAgo(user.created_at)}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className='stats-cell'>\n                                        <div className='count-sec'>\n                                            <div className='counts'>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.answer_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            answers\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.post_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            questions\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.comment_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            comments\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='cells'>\n                                                    <div className='column-grid'>\n                                                        <div className='head'>\n                                                            {user.tag_count}\n                                                        </div>\n                                                        <div className='foot'>\n                                                            tags\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <h3>Questions asked by {user.username}</h3>\n                    <div className='questions'>\n                        {userPosts.length === 0 ? ( <h4 style={{margin: '30px 30px'}}>There are no questions asked by {user.username}</h4> ) :\n                            userPosts.map(userpost => (\n                                <PostItem key={userpost.id} post={userpost} />\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    </Fragment>\n\n\n};\n\nUserPage.propTypes = {\n    getUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    getTopPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getUser, getTopPosts })(UserPage);"]},"metadata":{},"sourceType":"module"}