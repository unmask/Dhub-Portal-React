{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/LeaderBoardPage/LeaderBoardPage.component.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Chart from \"react-apexcharts\";\nimport { getUsers } from '../../redux/users/users.actions';\nimport './LeaderBoardPage.styles.scss';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst LeaderBoardPage = ({\n  getUsers,\n  user: {\n    users,\n    loading\n  },\n  auth: {\n    isAuthenticated\n  }\n}) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  const usernames = users.map(user => {\n    return user.username;\n  });\n  const userpoints = users.map(user => {\n    return user.posts_count * 5;\n  });\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        columnWidth: '55%',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: usernames\n    },\n    yaxis: {\n      title: {\n        text: 'Users'\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \" points\";\n        }\n      }\n    }\n  };\n  const series = [{\n    name: \"Points\",\n    data: userpoints\n  }];\n  return loading || users === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"LeaderBoard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-browser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    width: \"700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), isAuthenticated && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"progress-bar w-75\",\n    role: \"progressbar\",\n    \"aria-valuenow\": \"75\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n};\n\nLeaderBoardPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(LeaderBoardPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/LeaderBoardPage/LeaderBoardPage.component.jsx"],"names":["React","Fragment","useEffect","connect","PropTypes","Chart","getUsers","SideBar","RightSideBar","LeaderBoardPage","user","users","loading","auth","isAuthenticated","usernames","map","username","userpoints","posts_count","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","series","name","data","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Chart from \"react-apexcharts\";\nimport { getUsers } from '../../redux/users/users.actions';\n\nimport './LeaderBoardPage.styles.scss'\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst LeaderBoardPage = ({ getUsers, user: { users, loading }, auth: { isAuthenticated }}) => {\n    useEffect(() => {\n      getUsers();\n    }, [getUsers]);\n\n    const usernames = users.map(user => {\n      return user.username\n    });\n\n    const userpoints = users.map(user => {\n      return user.posts_count * 5;\n    });\n    const options = {\n        chart: {\n            type: 'bar',\n            height: 350\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              columnWidth: '55%',\n              endingShape: 'rounded'\n            },\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n          },\n          xaxis: {\n            categories: usernames,\n          },\n          yaxis: {\n            title: {\n              text: 'Users'\n            }\n          },\n          fill: {\n            opacity: 1\n          },\n          tooltip: {\n            y: {\n              formatter: function (val) {\n                return val + \" points\"\n              }\n            }\n        }\n    }\n\n    const series = [\n        {\n          name: \"Points\",\n          data: userpoints\n        }\n    ]\n\n    return loading || users === null ? <Fragment>Loading...</Fragment> : (\n        <div className='page'>\n            <SideBar/>\n            <div className='tags-page'>\n                <div className='main-bar'>\n                    <h1 className='headline'>LeaderBoard</h1>\n                    <div className='user-browser'>\n                        <div className='grid-layout'>\n                        <Chart\n                            options={options}\n                            series={series}\n                            type=\"bar\"\n                            width=\"700\"\n                        />\n                        </div>\n                        { isAuthenticated &&\n                          <div class=\"progress\">\n                            <div class=\"progress-bar w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" />\n                          </div>\n                        }\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    )\n};\n\nLeaderBoardPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps,{ getUsers })(LeaderBoardPage);"]},"metadata":{},"sourceType":"module"}