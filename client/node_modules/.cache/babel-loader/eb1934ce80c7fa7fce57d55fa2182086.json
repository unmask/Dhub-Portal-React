{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/LeaderBoardPage/LeaderBoardPage.component.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Chart from \"react-apexcharts\";\nimport { getUsers } from '../../redux/users/users.actions';\nimport './LeaderBoardPage.styles.scss';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst LeaderBoardPage = ({\n  getUsers,\n  user: {\n    users,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  let topscore = 0;\n  let yourscore = 0;\n  let authenticatedUser = auth.user && auth.user.username;\n  const usernames = users.map(user => {\n    return user.username;\n  });\n  const userpoints = users.map(user => {\n    if (topscore < user.posts_count * 5) {\n      topscore = user.posts_count * 5;\n    }\n\n    if (authenticatedUser === user.username) {\n      yourscore = user.posts_count * 5;\n    }\n\n    return user.posts_count * 5;\n  });\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        columnWidth: '55%',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: usernames\n    },\n    yaxis: {\n      title: {\n        text: 'Users'\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \" points\";\n        }\n      }\n    }\n  };\n  const series = [{\n    name: \"Points\",\n    data: userpoints\n  }];\n  return loading || users === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 40\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"LeaderBoard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-browser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    width: \"700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  })), auth.isAuthenticated && (Math.round(yourscore / topscore * 100) !== 100 ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `progress-bar w-${Math.round(yourscore / topscore * 100)}`,\n    role: \"progressbar\",\n    \"aria-valuenow\": yourscore,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": topscore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      paddingLeft: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 35\n    }\n  }, \"Congratulations!! You are at the top of the leaderboard\"))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }));\n};\n\nLeaderBoardPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(LeaderBoardPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/LeaderBoardPage/LeaderBoardPage.component.jsx"],"names":["React","Fragment","useEffect","connect","PropTypes","Chart","getUsers","SideBar","RightSideBar","LeaderBoardPage","user","users","loading","auth","topscore","yourscore","authenticatedUser","username","usernames","map","userpoints","posts_count","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","series","name","data","isAuthenticated","Math","round","paddingLeft","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Chart from \"react-apexcharts\";\nimport { getUsers } from '../../redux/users/users.actions';\n\nimport './LeaderBoardPage.styles.scss'\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nconst LeaderBoardPage = ({ getUsers, user: { users, loading }, auth}) => {\n    useEffect(() => {\n      getUsers();\n    }, [getUsers]);\n\n    let topscore = 0;\n\n    let yourscore = 0;\n\n    let authenticatedUser = auth.user && auth.user.username;\n\n    const usernames = users.map(user => {\n      return user.username\n    });\n\n    const userpoints = users.map(user => {\n      if(topscore < user.posts_count * 5) {\n        topscore = user.posts_count * 5;\n      }\n      if (authenticatedUser === user.username) {\n        yourscore = user.posts_count * 5;\n      }\n      return user.posts_count * 5;\n    });\n    const options = {\n        chart: {\n            type: 'bar',\n            height: 350\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              columnWidth: '55%',\n              endingShape: 'rounded'\n            },\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n          },\n          xaxis: {\n            categories: usernames,\n          },\n          yaxis: {\n            title: {\n              text: 'Users'\n            }\n          },\n          fill: {\n            opacity: 1\n          },\n          tooltip: {\n            y: {\n              formatter: function (val) {\n                return val + \" points\"\n              }\n            }\n        }\n    }\n\n    const series = [\n        {\n          name: \"Points\",\n          data: userpoints\n        }\n    ]\n\n    return loading || users === null ? <Fragment>Loading...</Fragment> : (\n        <div className='page'>\n            <SideBar/>\n            <div className='tags-page'>\n                <div className='main-bar'>\n                    <h1 className='headline'>LeaderBoard</h1>\n                    <div className='user-browser'>\n                        <div className='grid-layout'>\n                        <Chart\n                            options={options}\n                            series={series}\n                            type=\"bar\"\n                            width=\"700\"\n                        />\n                        </div>\n                        { auth.isAuthenticated && ( (Math.round(yourscore/topscore * 100) !== 100 ?\n                          <div class=\"progress\">\n                            <div className={`progress-bar w-${Math.round(yourscore/topscore * 100)}`} role=\"progressbar\" aria-valuenow={yourscore} aria-valuemin=\"0\" aria-valuemax={topscore} />\n                          </div>: <h1 style={{paddingLeft: 80}}>Congratulations!! You are at the top of the leaderboard</h1>))\n                        }\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    )\n};\n\nLeaderBoardPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps,{ getUsers })(LeaderBoardPage);"]},"metadata":{},"sourceType":"module"}