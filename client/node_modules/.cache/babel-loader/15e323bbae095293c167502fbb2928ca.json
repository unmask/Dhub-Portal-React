{"ast":null,"code":"const MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nfunction getFormattedDate(date, prefomattedDate = false, hideYear = false) {\n  const day = date.getDate();\n  const month = MONTH_NAMES[date.getMonth()];\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  let minutes = date.getMinutes();\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  if (prefomattedDate) {\n    return `${prefomattedDate} at ${hours}:${minutes}`;\n  }\n\n  if (hideYear) {\n    return `${day}. ${month} at ${hours}:${minutes}`;\n  }\n\n  return `${day}. ${month} ${year}. at ${hours}:${minutes}`;\n}\n\nfunction timeAgo(dateParam) {\n  if (!dateParam) {\n    return null;\n  }\n\n  const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\n  const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\n\n  const today = new Date();\n  const yesterday = new Date(today - DAY_IN_MS);\n  const seconds = Math.round((today - date) / 1000);\n  const minutes = Math.round(seconds / 60);\n  const isToday = today.toDateString() === date.toDateString();\n  const isYesterday = yesterday.toDateString() === date.toDateString();\n  const isThisYear = today.getFullYear() === date.getFullYear();\n\n  if (seconds < 5) {\n    return 'now';\n  } else if (seconds < 60) {\n    return `${seconds} seconds ago`;\n  } else if (seconds < 90) {\n    return 'about a minute ago';\n  } else if (minutes < 60) {\n    return `${minutes} minutes ago`;\n  } else if (isToday) {\n    return getFormattedDate(date, 'Today'); // Today at 10:20\n  } else if (isYesterday) {\n    return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\n  } else if (isThisYear) {\n    return getFormattedDate(date, false, true); // 10. January at 10:20\n  }\n\n  return getFormattedDate(date); // 10. January 2017. at 10:20\n}\n\nexport default timeAgo;","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/services/timeAgo.service.js"],"names":["MONTH_NAMES","getFormattedDate","date","prefomattedDate","hideYear","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","timeAgo","dateParam","Date","DAY_IN_MS","today","yesterday","seconds","Math","round","isToday","toDateString","isYesterday","isThisYear"],"mappings":"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","sourcesContent":["const MONTH_NAMES = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n];\n\nfunction getFormattedDate(date, prefomattedDate = false, hideYear = false) {\n    const day = date.getDate();\n    const month = MONTH_NAMES[date.getMonth()];\n    const year = date.getFullYear();\n    const hours = date.getHours();\n    let minutes = date.getMinutes();\n    if (minutes < 10) {\n        minutes = `0${ minutes }`;\n    }\n    if (prefomattedDate) {\n        return `${ prefomattedDate } at ${ hours }:${ minutes }`;\n    }\n    if (hideYear) {\n        return `${ day }. ${ month } at ${ hours }:${ minutes }`;\n    }\n    return `${ day }. ${ month } ${ year }. at ${ hours }:${ minutes }`;\n}\nfunction timeAgo(dateParam) {\n    if (!dateParam) {\n        return null;\n    }\n    const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\n    const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\n    const today = new Date();\n    const yesterday = new Date(today - DAY_IN_MS);\n    const seconds = Math.round((today - date) / 1000);\n    const minutes = Math.round(seconds / 60);\n    const isToday = today.toDateString() === date.toDateString();\n    const isYesterday = yesterday.toDateString() === date.toDateString();\n    const isThisYear = today.getFullYear() === date.getFullYear();\n    if (seconds < 5) {\n        return 'now';\n    } else if (seconds < 60) {\n        return `${ seconds } seconds ago`;\n    } else if (seconds < 90) {\n        return 'about a minute ago';\n    } else if (minutes < 60) {\n        return `${ minutes } minutes ago`;\n    } else if (isToday) {\n        return getFormattedDate(date, 'Today'); // Today at 10:20\n    } else if (isYesterday) {\n        return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\n    } else if (isThisYear) {\n        return getFormattedDate(date, false, true); // 10. January at 10:20\n    }\n    return getFormattedDate(date); // 10. January 2017. at 10:20\n}\n\nexport default timeAgo;"]},"metadata":{},"sourceType":"module"}