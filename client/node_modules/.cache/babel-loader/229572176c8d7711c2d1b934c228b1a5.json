{"ast":null,"code":"var _jsxFileName = \"/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/QuestionsPage/QuestionsPage.component.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\nimport './QuestionsPage.styles.scss';\n\nconst QuestionsPage = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading || posts === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 40\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 74\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questions-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"All Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/add/question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-sm btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, \"Ask Question\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"19,204,360 questions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(RightSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })));\n};\n\nQuestionsPage.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(QuestionsPage);","map":{"version":3,"sources":["/home/apple/my-projects/Stack-Overflow-Clone/client/src/pages/QuestionsPage/QuestionsPage.component.jsx"],"names":["React","useEffect","Fragment","connect","PropTypes","getPosts","Link","SideBar","PostItem","RightSideBar","QuestionsPage","post","posts","loading","map","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AAEA,OAAO,6BAAP;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEL,EAAAA,QAAF;AAAYM,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA6C;AAC/DZ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAAEA,QAAF,CAFM,CAAT;AAIA,SAAOQ,OAAO,IAAID,KAAK,KAAK,IAArB,gBAA4B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5B,gBAA8D,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAG,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CAFJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CATJ,eAYI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACE,GAAN,CAAUH,IAAI,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACI,EAApB;AAAwB,IAAA,IAAI,EAAEJ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAZJ,CADJ,CAHJ,eAsBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADiE,CAArE;AA0BH,CA/BD;;AAkCAD,aAAa,CAACM,SAAd,GAA0B;AACtBX,EAAAA,QAAQ,EAAED,SAAS,CAACa,IAAV,CAAeC,UADH;AAEtBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFD,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADkB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAuCK,aAAvC,CAAf","sourcesContent":["import React, {useEffect,Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\n\nimport SideBar from '../../components/SideBar/SideBar.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport RightSideBar from '../../components/right-sideBar/right-sideBar.component';\n\nimport './QuestionsPage.styles.scss'\n\n\nconst QuestionsPage = ({ getPosts, post: { posts, loading }  }) => {\n    useEffect(() => {\n        getPosts();\n    }, [ getPosts ]);\n\n    return loading || posts === null ? <Fragment>Loading...</Fragment> : <Fragment>\n        <div className='page'>\n            <SideBar/>\n\n            <div className='questions-page'>\n                <div className='main-bar'>\n                    <div className='questions-grid'>\n                        <h3 className='questions-headline'>All Questions</h3>\n                        <div className='questions-btn'>\n                            <Link to='/add/question'>\n                                <button className = 'btn btn-sm btn-primary'>Ask Question</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className='questions-tabs'>\n                        <span>19,204,360 questions</span>\n                    </div>\n                    <div className='questions'>\n                        {posts.map(post => (\n                            <PostItem key={post.id} post={post} />))}\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n        </Fragment>\n};\n\n\nQuestionsPage.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(QuestionsPage);"]},"metadata":{},"sourceType":"module"}